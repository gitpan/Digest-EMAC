DESCRIPTION

This is Encrypted MAC (EMAC), formerly known as Double MAC (DMAC).
Unlike HMAC, which reuses an existing one-way hash function, such as
MD5, SHA-1 or RIPEMD-160, EMAC reuses an existing block cipher to
produce a secure message authentication code (MAC).

Using the block cipher, a message is encrypted in CBC mode. The last
block is taken as the MAC of the message. For fixed-length messages,
this method is provably secure. In reality, however, messages have
arbitrary lengths, and this method is not secure. To make secure MACs
for variable length messages, the last block is encrypted once again
with a different key. The security of this construction has been proved
in the paper, ``CBC MAC for Real-Time Data Sources'' by Erez Petrank
and Charles Rackoff. The security can be proved on the assumption that
the underlying block cipher is pseudo-random.

The performance and key-agility of EMAC are reasonable. EMAC is
preferable for short messages because the block length is smaller
compared to the schemes based on a hash function. EMAC is also chosen
as one of the NESSIE winners for Message Authentication Codes, along
with UMAC, TTMAC and HMAC. The current NESSIE specification chooses the
AES as block cipher.

Also specified in the paper by Petrank and Rackoff is the construction
of two encryption keys from a single key. The first subkey is derived
by encrypting `0' (zero) using the original secret key. To produce the
second subkey, a `1' (one) is encrypted using the original secret key.
The first subkey is used in CBC mode to encrypt the entire message. The
last ciphertext block is then re-encrypted with the second subkey. The
result is a MAC whose length is equal to the block length of the cipher
used.

EXAMPLES

Sample scripts are found on the directory "example". In particular,
the script multiple-file is used as follows:

    ./multiple-files file1 file2 file3 ...

where "file1", "file2", "file3", and so on, are the argument files.

PREREQUISITES

The module Crypt::CBC is required, plus any block cipher that is
capable of returning its block size when queried. RC5 is not supported,
however, because its block size is variable.

MIME::Base64 is required if a base64 encoding of output is desired.

LICENSE

This program is free software; you can redistribute it or modify it
under the terms of the GNU General Public License. 

AUTHOR

Julius C. Duque <jcduque (AT) lycos (DOT) com>
2003 May 15th Thursday

